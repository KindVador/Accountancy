cmake_minimum_required(VERSION 3.20)

project(Accountancy VERSION 0.1
                    LANGUAGES CXX
                    DESCRIPTION "Personnel application to manage accounts.")

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

set(CMAKE_AUTOUIC ON)
set(CMAKE_AUTOMOC ON)
set(CMAKE_AUTORCC ON)

set(CMAKE_INCLUDE_CURRENT_DIR ON)

find_package(Qt6 COMPONENTS Widgets Sql REQUIRED)

add_subdirectory(src/ui)
add_subdirectory(src/core)
add_subdirectory(src/data_loader)

set(HEADER_FILES
        src/model.hpp
        src/controller.hpp
        src/currencymodel.hpp
        src/ownermodel.hpp
        )

set(SOURCE_FILES
        src/model.cpp
        src/controller.cpp
        src/currencymodel.cpp
        src/main.cpp
        src/ownermodel.cpp
        )

set(UI_FILES
        src/ImportDialogInDb.ui
        )

set(RESOURCE_FILES
        Resources.qrc
        )

set(TRANSLATION_FILES
        Accountancy_en_US.ts
        Accountancy_fr_FR.ts
        )

IF(${CMAKE_SYSTEM_NAME} MATCHES "Darwin")
    message("macOS detected")
    # The MACOSX_BUNDLE_ICON_FILE variable is added to the Info.plist
    # generated by CMake. This variable contains the .icns file _name,
    # without the path.
#    set(MACOSX_BUNDLE_ICON_FILE decode.icns)

    # And the following tells CMake where to find and install the file itself.
    set(app_icon_macos "${CMAKE_CURRENT_SOURCE_DIR}/resources/icons/accountancy.svg")

    set_source_files_properties(${app_icon_macos} PROPERTIES MACOSX_PACKAGE_LOCATION "Resources")
    qt_add_executable(Accountancy MACOSX_BUNDLE MANUAL_FINALIZATION ${HEADER_FILES} ${SOURCE_FILES} ${UI_FILES} ${RESOURCE_FILES} ${TRANSLATION_FILES} ${app_icon_macos})
ELSEIF(${CMAKE_SYSTEM_NAME} MATCHES "Linux")
    message("linux detected")
    qt_add_executable(Accountancy MANUAL_FINALIZATION ${HEADER_FILES} ${SOURCE_FILES} ${UI_FILES} ${RESOURCE_FILES} ${TRANSLATION_FILES})
ELSE()
    message("windows detected")
    qt_add_executable(Accountancy WIN32 MANUAL_FINALIZATION ${HEADER_FILES} ${SOURCE_FILES} ${UI_FILES} ${RESOURCE_FILES} ${TRANSLATION_FILES})
ENDIF()

# Since Qt 5.15, the CMake targets are also available as Qt::Core, Qt::Gui, and so on.
# This eases writing CMake code that can work with both Qt 5 and Qt 6.
target_link_libraries(Accountancy PRIVATE Qt::Widgets Qt::Sql AccountancyCore AccountancyUi AccountancyDataLoader)

set_target_properties(Accountancy PROPERTIES
        MACOSX_BUNDLE_GUI_IDENTIFIER kindvador.com
        MACOSX_BUNDLE_BUNDLE_VERSION ${PROJECT_VERSION}
        MACOSX_BUNDLE_SHORT_VERSION_STRING ${PROJECT_VERSION_MAJOR}.${PROJECT_VERSION_MINOR}
        )

qt_finalize_executable(Accountancy)