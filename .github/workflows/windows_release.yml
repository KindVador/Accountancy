name: Windows Release

on:
  push:
    branches: [ "develop", "master" ]
  pull_request:
    branches: [ "develop", "master" ]

defaults:
  run:
    shell: cmd

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE:        Release
  SOURCE_DIR:        ${{ github.workspace }}
  QT_VERSION:        6.6.0
  QT_ARCHITECTURE:   win64_msvc2019_64
  QT_LIB_PATH:       msvc2019_64

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: windows-latest

    steps:
      - name: Checkout repository and submodules
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          version:          ${{ env.QT_VERSION }}
          host:             windows
          target:           desktop
          dir:              ${{ runner.temp }}
          arch:             ${{ env.QT_ARCHITECTURE }}
          install-deps:     true
          archives:         qtbase qtsvg
          cache:            false
          cache-key-prefix: install-qt-action
          setup-python:     false
          tools:            tools_ifw tools_qtcreator,qt.tools.qtcreator
          set-env:          true
          tools-only:       false
          aqtversion:       ==2.1.*
          py7zrversion:     ==0.19.*
          extra:            --external 7z

      - name: Update PATH
        run: |
          echo "${{ runner.temp }}/Qt/${{ env.QT_VERSION }}/${{ env.QT_LIB_PATH }}/bin" >> $GITHUB_PATH

      - name: Configure CMake
        # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
        # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
        run: cmake -B ${{ github.workspace }}/build -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} -DCMAKE_PREFIX_PATH='${{ runner.temp }}/Qt/${{ env.QT_VERSION }}/${{ env.QT_LIB_PATH }}'

      - name: Build
        # Build your program with the given configuration
        run: cmake --build ${{ github.workspace }}/build --config ${{ env.BUILD_TYPE }}

      - name: Test
        working-directory: ${{github.workspace}}/build/build_tests
        # Execute tests defined by the CMake configuration.
        # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
        run: ctest -C ${{env.BUILD_TYPE}} --extra-verbose --output-on-failure
